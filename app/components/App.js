/* src/app/components/App.svelte generated by Svelte v3.59.2 */
import {
	SvelteComponent,
	append,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "svelte/internal";

import { Router, Route, Link } from 'yrv';
import NotFound from './pages/NotFound.svelte';
import Home from './pages/Home.svelte';

function create_default_slot_2(ctx) {
	let t;

	return {
		c() {
			t = text("Dashboard");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (12:8) <Link exact href="/admin/not-found">
function create_default_slot_1(ctx) {
	let t;

	return {
		c() {
			t = text("Page not found");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (8:0) <Router path="/admin">
function create_default_slot(ctx) {
	let nav1;
	let nav0;
	let link0;
	let t0;
	let link1;
	let t1;
	let main;
	let route0;
	let t2;
	let route1;
	let current;

	link0 = new Link({
			props: {
				exact: true,
				href: "/admin",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			}
		});

	link1 = new Link({
			props: {
				exact: true,
				href: "/admin/not-found",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			}
		});

	route0 = new Route({
			props: { exact: true, path: "/", component: Home }
		});

	route1 = new Route({
			props: { fallback: true, component: NotFound }
		});

	return {
		c() {
			nav1 = element("nav");
			nav0 = element("nav");
			create_component(link0.$$.fragment);
			t0 = text("\n      | ");
			create_component(link1.$$.fragment);
			t1 = space();
			main = element("main");
			create_component(route0.$$.fragment);
			t2 = space();
			create_component(route1.$$.fragment);
		},
		m(target, anchor) {
			insert(target, nav1, anchor);
			append(nav1, nav0);
			mount_component(link0, nav0, null);
			append(nav0, t0);
			mount_component(link1, nav0, null);
			insert(target, t1, anchor);
			insert(target, main, anchor);
			mount_component(route0, main, null);
			append(main, t2);
			mount_component(route1, main, null);
			current = true;
		},
		p(ctx, dirty) {
			const link0_changes = {};

			if (dirty & /*$$scope*/ 1) {
				link0_changes.$$scope = { dirty, ctx };
			}

			link0.$set(link0_changes);
			const link1_changes = {};

			if (dirty & /*$$scope*/ 1) {
				link1_changes.$$scope = { dirty, ctx };
			}

			link1.$set(link1_changes);
		},
		i(local) {
			if (current) return;
			transition_in(link0.$$.fragment, local);
			transition_in(link1.$$.fragment, local);
			transition_in(route0.$$.fragment, local);
			transition_in(route1.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(link0.$$.fragment, local);
			transition_out(link1.$$.fragment, local);
			transition_out(route0.$$.fragment, local);
			transition_out(route1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(nav1);
			destroy_component(link0);
			destroy_component(link1);
			if (detaching) detach(t1);
			if (detaching) detach(main);
			destroy_component(route0);
			destroy_component(route1);
		}
	};
}

function create_fragment(ctx) {
	let router;
	let current;

	router = new Router({
			props: {
				path: "/admin",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	return {
		c() {
			create_component(router.$$.fragment);
		},
		m(target, anchor) {
			mount_component(router, target, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			const router_changes = {};

			if (dirty & /*$$scope*/ 1) {
				router_changes.$$scope = { dirty, ctx };
			}

			router.$set(router_changes);
		},
		i(local) {
			if (current) return;
			transition_in(router.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(router.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(router, detaching);
		}
	};
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default App;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBpbXBvcnQgeyBSb3V0ZXIsIFJvdXRlLCBMaW5rIH0gZnJvbSAneXJ2JztcblxuICBpbXBvcnQgTm90Rm91bmQgZnJvbSAnLi9wYWdlcy9Ob3RGb3VuZC5zdmVsdGUnO1xuICBpbXBvcnQgSG9tZSBmcm9tICcuL3BhZ2VzL0hvbWUuc3ZlbHRlJztcbjwvc2NyaXB0PlxuXG48Um91dGVyIHBhdGg9XCIvYWRtaW5cIj5cbiAgPG5hdj5cbiAgICA8bmF2PlxuICAgICAgPExpbmsgZXhhY3QgaHJlZj1cIi9hZG1pblwiPkRhc2hib2FyZDwvTGluaz5cbiAgICAgIHwgPExpbmsgZXhhY3QgaHJlZj1cIi9hZG1pbi9ub3QtZm91bmRcIj5QYWdlIG5vdCBmb3VuZDwvTGluaz5cbiAgICA8L25hdj5cbiAgPC9uYXY+XG4gIDxtYWluPlxuICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL1wiIGNvbXBvbmVudD17SG9tZX0gLz5cbiAgICA8Um91dGUgZmFsbGJhY2sgY29tcG9uZW50PXtOb3RGb3VuZH0gLz5cbiAgPC9tYWluPlxuPC9Sb3V0ZXI+XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztTQUNXLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxRQUFRLEtBQUs7T0FFbEMsUUFBUSxNQUFNLHlCQUF5QjtPQUN2QyxJQUFJLE1BQU0scUJBQXFCOzs7Ozs7O1lBTVIsV0FBUzs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFDRyxnQkFBYzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0NBSXJCLElBQUk7Ozs7dUNBQ1YsUUFBUTs7Ozs7Ozs7YUFOUyxZQUN4Qzs7Ozs7Ozs7O0dBSE4sTUFLTTtHQUpKLE1BR007Ozs7O0dBRVIsTUFHTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==